{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA1CMQ,SAASC,cAAc,QAC/BC,iBAAiB,UACtB,SAAoBC,GAClBA,EAAIC,iBAGJ,IAFA,IAAgCC,EAAAF,EAAIG,OAAOC,SAAnCC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,OAAQC,EAASL,EAATK,KACnBC,EAAWC,OAAOJ,EAAMK,OACnBC,EAAI,EAAGA,EAAIL,EAAOI,MAAOC,GAAK,EACrCxB,EAAcwB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,MAAK,CAC9D4B,QAAO,GACTC,QAAS,IACT9B,SAAU,gBACV+B,qBAAsB,IACtBC,aAAa,EACbC,iBAAkB,wB,IAGrBC,OAAM,SAAAT,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBJ,EAAA6B,OAAOS,QAAQ,sBAAqCP,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,MAAK,CAC7D4B,QAAS,GACT7B,SAAU,gBACV8B,QAAS,IACTE,aAAa,EACbD,qBAAsB,IACtBE,iBAAkB,uB,IAGxBb,GAAYC,OAAOF,EAAKG,OAE1BV,EAAIG,OAAOqB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', submitForm);\nfunction submitForm(evt) {\n  evt.preventDefault();\n  const { delay, amount, step } = evt.target.elements;\n  let delayVal = Number(delay.value);\n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(i, delayVal)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled Promise ${position} in ${delay}ms`, {\n          opacity: 0.8,\n          timeout: 500,\n          position: 'center-center',\n          cssAnimationDuration: 500,\n          backOverlay: true,\n          backOverlayColor: 'rgba(50,220,130,0.2)',\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected Promise ${position} in ${delay}ms`, {\n          opacity: 0.8,\n          position: 'center-center',\n          timeout: 500,\n          backOverlay: true,\n          cssAnimationDuration: 500,\n          backOverlayColor: 'rgba(255,85,73,0.2)',\n        });\n      });\n    delayVal += Number(step.value);\n  }\n  evt.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","target","elements","delay1","amount","step","delayVal","Number","value","i","then","param","Notify","success","concat","opacity","timeout","cssAnimationDuration","backOverlay","backOverlayColor","catch","failure","reset"],"version":3,"file":"03-promises.b7ae4321.js.map"}